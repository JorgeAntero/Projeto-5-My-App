name: CI/CD - Build, Push e PR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build e PR de Manifests
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: jorgeantero/hello-app
      MANIFEST_REPO: git@github.com:JorgeAntero/Projeto-5-Manifests.git
      MANIFEST_PATH: root/deployment.yaml

    steps:
      - name: Checkout do repositório da aplicação
        uses: actions/checkout@v4

      - name: Definir TAG com timestamp
        run: echo "TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Login no DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build e Push da imagem
        run: |
          docker build -t $IMAGE_NAME:${{ env.TAG }} .
          docker push $IMAGE_NAME:${{ env.TAG }}

      - name: Clonar repositório de manifests com SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone $MANIFEST_REPO manifests

      - name: Atualizar deployment.yaml com nova TAG
        run: |
          sed -i "s|\(image: $IMAGE_NAME:\).*|\1${{ env.TAG }}|" manifests/${{ env.MANIFEST_PATH }}

      - name: Configurar git
        run: |
          cd manifests
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout main
          git checkout -b update-image-${{ env.TAG }}

      - name: Commit e push
        run: |
          cd manifests
          git add ${{ env.MANIFEST_PATH }}
          git commit -m "Atualiza imagem para tag ${{ env.TAG }}"
          git push origin update-image-${{ env.TAG }}

      - name: Criar Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ github.token }}
          path: manifests
          branch: update-image-${{ env.TAG }}
          base: main
          title: "Atualiza imagem para tag ${{ env.TAG }}"
          commit-message: "Atualiza imagem para tag ${{ env.TAG }}"
